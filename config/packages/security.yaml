security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        # Configuration pour les routes de développement (profiler, CSS, JS, etc.)
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # Firewall pour les routes classiques (web) 
        main:
            pattern: ^/(?!api) 
            security: true

        # Firewall pour l'API avec JWT
        api:
            pattern: ^/api/
            stateless: true
            provider: app_user_provider
            entry_point: jwt
            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            jwt: ~
            

    # Contrôle d'accès (access_control) : gestion des autorisations sur les différentes routes API
    access_control:
    - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/logoff, roles: ROLE_USER }
    - { path: ^/api/select, roles: ROLE_USER }
    - { path: ^/api/assign-role, roles: ROLE_USER } 
    - { path: ^/api/projects, roles: ROLE_USER }
    - { path: ^/api/projects/create, roles: [ROLE_ADMIN, ROLE_MANAGER] } 
    - { path: ^/api/projects/edit, roles: [ROLE_ADMIN, ROLE_MANAGER] }  
    - { path: ^/api/projects/delete, roles: [ROLE_ADMIN, ROLE_MANAGER] }
    - { path: ^/api/users, roles: ROLE_ADMIN }
